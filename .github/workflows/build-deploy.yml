name: Build and Deploy
on:
  push:
    branches:
      - main
      - staging
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Get the current branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: get_branch

      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./
          build-args: |
            PRISMIC_SECRET=${{ secrets.PRISMIC_SECRET }}
            HEROKU=${{ secrets.HEROKU }}
            GOOGLE_PRIVATE_KEY=${{ secrets.GOOGLE_PRIVATE_KEY }}
            GOOGLE_CLIENT_EMAIL=${{ secrets.GOOGLE_CLIENT_EMAIL }}
            CREATESEND_LIST=${{ secrets.CREATESEND_LIST }}
            CREATESEND_KEY=${{ secrets.CREATESEND_KEY }}
            CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}
            CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }}
            CLOUDFLARE_ZONE=${{ secrets.CLOUDFLARE_ZONE }}
            CLOUDFLARE_KEY=${{ secrets.CLOUDFLARE_KEY }}
            CLOUDFLARE_EMAIL=${{ secrets.CLOUDFLARE_EMAIL }}
            ANALYTICS_VIEW_ID=${{ secrets.ANALYTICS_VIEW_ID }}
          tags: |
            ghcr.io/verdensmaalene/${{ github.event.repository.name }}/${{ steps.get_branch.outputs.branch }}:latest
            ghcr.io/verdensmaalene/${{ github.event.repository.name }}/${{ steps.get_branch.outputs.branch }}:${{ env.SHORT_SHA }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}