/* @define Intro */

@import "../base";
@import "../text";

/**
 * 1. Add some top spacing when #-targeted
 */

.Target {
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 0;
}

.Target.is-collapsed .Target-content {
  overflow: hidden;
}

@media (max-width: 599px) {
  .Target.is-calculating .Target-content {
    max-height: 11.3rem;
    overflow: hidden;
  }
}

.Target-figure {
  padding-top: 55%;
  margin-bottom: 1rem;
  position: relative;
  color: rgb(var(--current-color));
  background: rgb(var(--current-background));
  font-size: 1.75rem;
}

.Target-caption {
  position: absolute;
  top: 0.75rem;
  left: 0.75rem;
  font-size: 1.35rem;
  white-space: nowrap;
  z-index: 1;
}

.Target-icon {
  width: 42%;
  position: absolute;
  top: 54%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.Target-heading {
  font-size: 1.5rem;
}

@media (min-width: 400px) {
  .Target-heading {
    font-size: 2rem;
  }
}

@media (min-width: 600px) {
  .Target-heading {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    flex-direction: column;
  }
}

.Target-actions {
  flex: 0 0 auto;
  display: flex;
  align-self: end;
  position: absolute;
  z-index: 3;
  top: 0.6rem;
  right: 0.6rem;
  font-size: 0.6rem;
  --current-background: 255, 255, 255;
}

.Target-action {
  display: block;
}

.Target-action + .Target-action {
  margin-left: 0.6rem;
}

@media (min-width: 600px) {
  .Target-actions {
    --current-background: var(--color-gray-light);
    position: relative;
    top: auto;
    right: auto;
    font-size: 0.8rem;
  }

  .Target-action:hover {
    --current-background: 200, 200, 200;
  }
}

@media (min-width: 800px) and (max-width: 1399px) {
  .Target-heading .Target-action {
    display: none;
  }
}

@media (max-width: 799px), (min-width: 1399px) {
  .Target-figure .Target-action {
    display: none;
  }
}

/**
 * 1. Move above fade
 */

.Target-title {
  flex: 1 1 auto;
  margin-right: auto;
  position: relative;
  z-index: 1; /* 1 */
  font-size: 1em;
}

@media (min-width: 400px) {
  .Target-title {
    margin-top: 0.2rem;
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
  }
}

@media (min-width: 600px) {
  .Target {
    flex-direction: row;
    padding: 1rem;
  }

  .Target.is-calculating {
    align-items: flex-start;
  }

  .Target-body {
    padding-right: 1rem;
    margin-bottom: -0.3rem;
  }
  .Target-body .show-more-text{
    margin-top: 20px;
    background: rgb(var(--color-gray-light));
    padding: 20px;
  }
  .Target-body .goal {
    margin-bottom: 20px;
  }
  .Target-body .goal span{
    display: block;
    font-weight: bold;
  }

  .Target:hover,
  .Target:target,
  .Target:focus-within {
    outline: 4px solid rgb(var(--color-gray-light)) !important;
    outline-offset: -2px !important;
  }

  .Target-figure {
    flex: 1 0 30%;
    max-width: 8.5rem;
    min-width: 6rem;
    padding: 0;
    margin: 0 1.5rem 0 0;
    background: transparent;
  }

  .Target-content {
    flex: 1 1 auto;
  }

  .Target-caption,
  .Target-icon {
    color: rgb(var(--current-color));
    background: rgb(var(--current-background));
  }

  .Target-caption {
    padding: 0.2rem 0.2rem 0.1rem;
    margin-bottom: 0.25rem;
    position: static;
    font-size: 1.35rem;
    text-align: center;
  }

  .Target-icon {
    width: 100%;
    position: static;
    transform: none;
  }

  .Target-content {
    margin-top: -0.2rem;
  }

  .Target-heading {
    font-size: 1.75rem;
  }
}

@media (min-width: 900px) {
  .Target {
    padding: 1.5rem;
  }

  .Target-figure {
    margin-right: 2rem;
  }
}

@media (min-width: 1000px) {
  .Target-heading {
    font-size: 2rem;
  }

  .Target-title {
    margin-bottom: 0.3rem;
  }
}

:root[scripting-enabled] .Target.is-collapsed .Target-body,
:root:not([scripting-enabled]) .Target:not(:target) .Target-body {
  position: absolute;
}

:root[scripting-enabled] .Target.is-collapsed .Target-content,
:root:not([scripting-enabled]) .Target:not(:target) .Target-content {
  position: relative;
  width: 100%;
}

.Target-fade {
  width: 100%;
  height: 6rem;
  padding-bottom: 0.3rem;
  position: absolute;
  left: 0;
  bottom: 0;
  color: rgb(var(--color-text-muted));
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 50%);
  background-position: 0 0;
  display: flex;
  align-items: flex-end;
  line-height: 1.1;
  background-position: 0 1.3rem;
  background-repeat: no-repeat;
  transition: color 140ms var(--ease-out);
}

@media (min-width: 800px) and (max-width: 1399px) {
  .Target-fade {
    padding-bottom: 0;
  }
}

.Target-fade > span {
  position: relative;
  padding-left: 1.2rem;
}

.Target-fade > span::before,
.Target-fade > span::after {
  content: "";
  width: 2px;
  height: 0.7em;
  position: absolute;
  left: 0.35em;
  top: 50%;
  transform-origin: center;
  transform: translateY(-50%);
  background-color: currentColor;
  transition: background-color 140ms var(--ease-out);
}

.Target-fade > span::after {
  transform: translateY(-50%) rotate(90deg);
}

.Target:hover .Target-fade,
.Target:focus-within .Target-fade {
  color: var(--default-color);
}

.Target-button {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  outline: 0;
  z-index: 2;
}

.Target-rounded{
  border-radius: 25px;
  background-color: rgb(var(--high-contrast-dark, var(--current-background)));
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px 20px;
}
.Target-rounded:hover{
  background-color: rgb(var(--current-background, 200, 200, 200));
}

:root:not([scripting-enabled]) .Target:target .Target-fade {
  display: none;
}
